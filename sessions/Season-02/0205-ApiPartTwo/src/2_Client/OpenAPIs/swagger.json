{
  "openapi": "3.0.1",
  "info": {
    "title": "C# with CSharpFritz Contact API",
    "description": "Fritz's contact API demo",
    "contact": {
      "name": "Jeff Fritz",
      "url": "https://www.csharpfritz.com",
      "email": "fritz@FritzsCoolApis.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/csharpfritz/csharp_with_csharpfritz/blob/main/LICENSE"
    },
    "version": "1.0"
  },
  "paths": {
    "/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get all of the contacts in the system",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Add a new contact",
        "description": "When creating a new contact, the Id value is not required.\r\n\r\nSample request:\r\n            \r\n    POST /Contact\r\n    {\r\n       \"FirstName\": \"First Name\",\r\n       \"LastName\": \"Last Name\"\r\n    }",
        "requestBody": {
          "description": "The new contact to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created the new contact successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Error creating the contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get the contact identified by id",
        "operationId": "GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the contact sought",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The unique identifier for the contact sought",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the contact sought",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Unable to find a contact with the id requested",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "required": [
          "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique identifier for the contact",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "type": "string",
            "description": "The contact's given name",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "description": "The contact's family name or surname"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}